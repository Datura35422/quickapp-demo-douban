<import name="movie-list" src="../list/index"></import>

<template>
  <div class="container">
    <refresh offset="132px" @refresh="refresh" refreshing="{{isRefreshing}}">
      <movie-list list="{{list.subjects}}"></movie-list>
    </refresh>
  </div>
</template>

<script>
import prompt from '@system.prompt'
import router from '@system.router'
import { getTopList } from '../../Common/api/movie'

export default {
  data: {
    list: {},
    isRefreshing: false
  },
  async onInit() {
    await this.loadData()
    this.$on('toDetail', this.listenerToDetail)
  },
  listenerToDetail (event) {
    router.push({
      uri: '/Movie',
      params: { id: event.detail.id }
    })
  },
  async loadData () {
    const list = await getTopList({count: 20})
    this.list = list
  },
  async refresh (e) {
    const self = this
    // 更新刷新状态（属性refreshing的值从false改为true会触发refresh组件的状态更新，反之亦然）
    self.isRefreshing = e.refreshing
    await this.loadData()
    self.isRefreshing = false // 关闭刷新状态
    prompt.showToast({
      message: '刷新完成'
    })
  }
}
</script>

<style lang="less">
  .container{
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
</style>
