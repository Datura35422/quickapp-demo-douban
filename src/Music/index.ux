<import name="rate" src="../Common/components/rating/index"></import>
<import name="header" src="../Common/components/header/index"></import>
<template>
  <div class="warp">
    <header title="音乐详情"></header>
    <div class="warp-content">
      <div>
        <text class="title">{{detail.title}}</text>
      </div>
      <div class="mess-warp" if="{{detail.id}}">
        <div class="mess">
          <div>
            <rate rate="{{detail.rating && detail.rating.numRaters ? detail.rating.average : ''}}"></rate>
            <text class="remark">{{detail.rating && detail.rating.numRaters}}人评价</text>
          </div>
          <div class="move">
            <text><span>表演者：</span>{{detail.attrs && detail.attrs.singer}}</text>
            <text><span>唱片公司：</span>{{detail.attrs && detail.attrs.publisher}}</text>
            <text><span>发行时间：</span>{{detail.attrs && detail.attrs.pubdate}}</text>
          </div>
        </div>
        <image class="cover" src="{{detail.image}}"></image>
      </div>

      <text class="introduct" if="{{detail.id}}">唱片简介</text>
      <text class="introduct-detail">{{detail.summary}}</text>
      <text class="actor" if="{{detail.id}}">曲目列表</text>
      <div for="{{detail.singList}}">
        <text>{{$item}}</text>
      </div>
      <text class="introduct" if="{{detail.id}}">相关标签</text>
      <div class="tag-warp">
        <div class="tag-item" for="{{detail.tags}}">
          <div class="tag">
            <text>{{$item.name}}</text>
          </div>
        </div>
      </div>
      <text onclick="toDouban" class="button">豆瓣看详情</text>
    </div>
  </div>
</template>

<script>
import webview from '@system.webview'
import { getDetail } from '../Common/api/music'
export default {
  private: { // 不允许被覆盖
    detail: {},
    directors: []
  },
  protected: { // 允许被应用内部页面请求传递的数据覆盖，不允许被应用外部请求传递的数据覆盖
    id: 0
  },
  onInit() {
    this.loadDetail()
  },

  async loadDetail() {
    const detail = await getDetail({
      id: this.id
    })
    this.detail = detail
    this.directors = detail.directors
  },
  toDouban() { // web
    webview.loadUrl({
      url: 'https://m.douban.com/movie/subject/' + (this.id || '4920389')
    })
  }
}
</script>

<style>
.button {
  width: 200px;
  height: 100px;
  text-align: center;
  border-radius: 6px;
  color: #ffffff;
  margin: 20px 0 30px 250px;
  background-color: #61BFAD;
}
.warp {
  display: flex;
  flex-direction: column;
  background-color: #ffffff;
}
.warp-content {
  display: flex;
  flex-direction: column;
  padding: 20px 30px;
  background-color: #61BFAD;
}
.title {
  font-size: 42px;
  margin-bottom: 20px;
}
.remark {
  font-size: 24px;
  margin-left: 15px;
  color: #aaaaaa;
}
.cover {
  width: 210px;
  height: 315px;
  margin-left: 30px;
}
.mess-warp {
  display: flex;
  margin-bottom: 40px;
}
.mess {
  flex: 1;
  display: flex;
  flex-direction: column;
}
.mess-word {
  font-size: 26px;
  line-height: 40px;
  margin-top: 24px;
}
.introduct {
  color: #aaaaaa;
  font-size: 30px;
  margin: 30px 0 20px;
}
.introduct-detail {
  line-height: 42px;
}
.tag {
  padding: 5px 20px;
  border-radius: 30px;
  background-color: #f5f5f5;
  color: #494949;
}
.tag-warp {
  display: flex;
  flex-wrap: wrap;
}
.tag-item {
  padding: 10px 5px;
}
.move {
  display: flex;
  flex-direction: column;
  font-size: 24px;
  margin-top: 30px;
}
.actor {
  color: #aaaaaa;
  margin: 30px 0 10px;
}
.su-title {
  color: #999999;
  margin-top: 20px;
}
.e-book {
  height: 100px;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.line {
  width: 100%;
  border: 1px solid #dddddd;
}
.line-middle {
  width: 100%;
  border: 1px solid #eeeeee;
}
</style>
